/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.MySQL2;

/**
 *
 * @author Rushma
 */
public class RequestedSessions extends javax.swing.JPanel {

    private DashboardInterface parent;

    /**
     * Creates new form RequestedSessions
     */
    public RequestedSessions(DashboardInterface parent) {
        this.parent = parent;
        initComponents();
        loadRequestedSessions();
        // Initially disable buttons
        approvebtn.setEnabled(false);
        rejectbtn.setEnabled(false);

        // Add selection listener to enable buttons when a row is selected
        jTable1.getSelectionModel().addListSelectionListener(event -> {
            if (!event.getValueIsAdjusting() && jTable1.getSelectedRow() != -1) {
                approvebtn.setEnabled(true);
                rejectbtn.setEnabled(true);
            }
        });
    }

    private void loadRequestedSessions() {
        try {
            String query = "SELECT "
                    + "tutor.first_name, tutor.last_name, "
                    + "request_sessions.title, request_sessions.date, "
                    + "request_sessions.start_time, request_sessions.id ,request_sessions.end_time, "
                    + "request_sessions.hallnumber,request_sessions.approve_status "
                    + "FROM request_sessions "
                    + "INNER JOIN tutor ON request_sessions.tutor_id = tutor.id";

            ResultSet resultSet = MySQL2.executeSearch(query);

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            while (resultSet.next()) {
                Vector<String> vector = new Vector<>();
                vector.add(resultSet.getString("request_sessions.id")); // Title
                String requestedBy = resultSet.getString("first_name") + " " + resultSet.getString("last_name");
                vector.add(requestedBy); // Requested By
                vector.add(resultSet.getString("title")); // Title
                vector.add(resultSet.getString("date")); // Date
                vector.add(resultSet.getString("start_time")); // Start Time
                vector.add(resultSet.getString("end_time")); // End Time
                vector.add(resultSet.getString("hallnumber")); // Hall Number
                vector.add(resultSet.getString("approve_status")); // Hall Number

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        approvebtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        rejectbtn = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(1004, 2586));
        setPreferredSize(new java.awt.Dimension(1004, 586));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setText("Requested Sessions");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Requested By", "Title", "Date", "Start time", "End Time", "Hall Number", "Approval Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
        }

        approvebtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        approvebtn.setText("Approve");
        approvebtn.setPreferredSize(new java.awt.Dimension(201, 26));
        approvebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approvebtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Select a row to approve or reject");

        rejectbtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        rejectbtn.setText("Reject");
        rejectbtn.setPreferredSize(new java.awt.Dimension(201, 26));
        rejectbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(327, 327, 327)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(approvebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rejectbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 916, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(approvebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(rejectbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // Check if the click is a single click
        if (evt.getClickCount() == 2) {
            // Get the selected row and column
            int selectedRow = jTable1.getSelectedRow();
            int selectedColumn = jTable1.getSelectedColumn();

            if (selectedRow != -1 && selectedColumn != -1) {
                // Get the data from the selected cell
                Object cellData = jTable1.getValueAt(selectedRow, selectedColumn);

                // Optionally, retrieve the entire row data
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                Vector<String> rowData = new Vector<>();
                for (int col = 0; col < model.getColumnCount(); col++) {
                    rowData.add((String) model.getValueAt(selectedRow, col));
                }
                TutorScheduleAndCalandar tutorPanel = new TutorScheduleAndCalandar(parent, rowData);
                parent.switchPanel(tutorPanel);
                // Pass the data to the new frame
//                DetailsFrame detailsFrame = new DetailsFrame(rowData, selectedRow, selectedColumn);
//                detailsFrame.setVisible(true);
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void approvebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approvebtnActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            String id = (String) jTable1.getValueAt(selectedRow, 0); // Get 'title' from selected row

            try {
                // Update approve_status to 'Approved'
                String query = "UPDATE request_sessions SET approve_status = 'Approved' WHERE `id`='" + id + "'";
                MySQL2.executeIUD(query);
                // Reload table data
                loadRequestedSessions();
                JOptionPane.showMessageDialog(this, "Session approved successfully!");

                // Disable buttons after action
                approvebtn.setEnabled(false);
                rejectbtn.setEnabled(false);
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error while approving session.");
            }
        }
    }//GEN-LAST:event_approvebtnActionPerformed

    private void rejectbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectbtnActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            String id = (String) jTable1.getValueAt(selectedRow, 0); // Get 'title' from selected row

            try {
                // Update approve_status to 'Rejected'
                String query = "UPDATE request_sessions SET approve_status = 'Rejected' WHERE `id`='" + id + "'";
                MySQL2.executeIUD(query);

                // Reload table data
                loadRequestedSessions();
                JOptionPane.showMessageDialog(this, "Session rejected successfully!");

                // Disable buttons after action
                approvebtn.setEnabled(false);
                rejectbtn.setEnabled(false);
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error while rejecting session.");
            }
        }
    }//GEN-LAST:event_rejectbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approvebtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton rejectbtn;
    // End of variables declaration//GEN-END:variables
}
